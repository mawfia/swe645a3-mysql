apiVersion: v1
kind: Service
metadata:
  name: mysql
  labels:
    app: mysql-spring
spec:
  ports:
    - port: 3306
  selector:
    app: mysql-spring
    tier: mysql
  clusterIP: None
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mysql
  labels:
    type: local
spec:
  storageClassName: mysql
  claimRef:
    name: mysql
    namespace: default
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Retain
  hostPath:
    path: "/docker-entrypoint-initdb.d"
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: mysql
provisioner: kubernetes.io/aws-ebs
parameters:
  type: gp2
  iopsPerGB: "100"
  fsType: ext4
  encrypted: "false"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql
  labels:
    app: mysql-spring
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: mysql
  labels:
    app: mysql-spring
spec:
  selector:
    matchLabels:
      app: mysql-spring
      tier: mysql
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: mysql-spring
        tier: mysql
    spec:
      containers:
      - image: mawfia/mysql:1.0
        name: mysql
        env:
        - name: MYSQL_ROOT_PASSWORD
          value: root
        - name: MYSQL_DATABASE
          value: swe645a3
        ports:
        - containerPort: 3306
          name: mysql
        lifecycle:
            postStart:
              exec:
                command: ["/bin/sh", "-c", "mysql --version"]
        volumeMounts:
        - name: mysql
          mountPath: /var/lib/mysql
      volumes:
      - name: mysql
        persistentVolumeClaim:
          claimName: mysql
